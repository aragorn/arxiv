#!/usr/bin/perl -w
use strict;
use diagnostics;
use warnings FATAL => 'all', NONFATAL => 'redefine';
use utf8;
use FindBin; FindBin->again();
use lib "$FindBin::Bin/../lib/perl5";
use CGI::Carp qw(warningsToBrowser fatalsToBrowser);
use CGI::Pretty qw(:standard escape escapeHTML -debug);

binmode STDOUT, ":encoding(UTF-8)";
my $q       = new CGI::Pretty; $q->charset('utf-8'); # for proper escapeHTML
my $server_name = join(":", $q->server_name, $q->virtual_port);
print $q->header(-charset=>'utf-8', -type=>'text/html');

print $q->start_html(-lang=>'ko_KR', -encoding=>'utf-8', -title=>$server_name);

print h2('%ENV');
print "<table>";
foreach ( sort keys %ENV )
{
  print "<tr><th>$_</th><td>$ENV{$_}</td></tr>\n";
}
print "</table>";

print table({-border=>1},
        caption('Some useful CGI methods'),
        Tr(
        [
          th(['name', 'static call', 'method call']),
          td(["server_name", CGI::server_name, $q->server_name]),
          td(["server_port", CGI::server_port, $q->server_port]),
          td(["http('HTTP_HOST')", CGI::http('HTTP_HOST'), $q->http('HTTP_HOST')]),
          td(["url", CGI::url, $q->url]),
          td(["url(-base=>1)", CGI::url(-base=>1), $q->url(-base=>1)]),
          td(["url(-full=>1)", CGI::url(-full=>1), $q->url(-full=>1)]),
          td(["url(-absolute=>1)", CGI::url(-absolute=>1), $q->url(-absolute=>1)]),
          td(["url(-path=>1,-absolute=>1)", CGI::url(-path=>1,-absolute=>1), $q->url(-path=>1,-absolute=>1)]),
          td(["url(-path=>1,-query=>1,-absolute=>1)", CGI::url(-path=>1,-query=>1,-absolute=>1), $q->url(-path=>1,-query=>1,-absolute=>1)]),
          td(["url(-relative=>1)", CGI->url(-relative=>1), $q->url(-relative=>1)]),
          td(["url(-path=>1,-relative=>1)", CGI->url(-path=>1,-relative=>1), $q->url(-path=>1,-relative=>1)]),
          td(["url(-path=>1,-query=>1,-relative=>1)", CGI->url(-path=>1,-query=>1,-relative=>1), $q->url(-path=>1,-query=>1,-relative=>1)]),
          td(["path_info", CGI->path_info, $q->path_info]),
        ]
        )
      );

print "<table>";
my @http_keys = http();
foreach ( sort @http_keys )
{
  print Tr( th($_), td(CGI::http($_)), td($q->http($_)) );
}
print "</table>";

my @values = param('name');
foreach ( @values ) {
  print "<p>name=$_</p>\n";
}

print table(
        caption('FindBin variables'),
        Tr(
        [
          td(['$FindBin::Bin', $FindBin::Bin]),
          td(['$FindBin::Script', $FindBin::Script]),
        ]
        )
      );

my $value = param('name') || '';
print "<p>scalar name=$value</p>\n";

print p("END"), end_html;

