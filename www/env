#!/usr/bin/perl -w
use strict;
use diagnostics;
use warnings FATAL => 'all', NONFATAL => 'redefine';
use utf8;
use CGI::Carp qw(warningsToBrowser fatalsToBrowser);
use CGI qw(:standard escape escapeHTML -oldstyle_urls);

binmode STDOUT, ":encoding(UTF-8)";
my $q       = new CGI; $q->charset('utf-8'); # for proper escapeHTML
my $server_name = join(":", $q->server_name, $q->virtual_port);
print $q->header(-charset=>'utf-8', -type=>'text/html');

print $q->start_html(-lang=>'ko_KR', -encoding=>'utf-8', -title=>$server_name);

print h2('%ENV');
print "<table>";
foreach ( sort keys %ENV )
{
  print "<tr><th>$_</th><td>$ENV{$_}</td></tr>\n";
}
print "</table>";

print h3("CGI::server_name()=", CGI::server_name());
print h3("CGI::server_port()=", CGI::server_port());
print h3("CGI::http('HTTP_HOST')=", CGI::http('HTTP_HOST'));
print h3("CGI::url(-base=>1)=", url(-base=>1));

print "<table>";
my @http_keys = http();
foreach ( sort @http_keys )
{
  print "<tr><th>$_</th><td>".CGI::http($_)."</td></tr>\n";
}
print "</table>";

my @values = param('name');
foreach ( @values ) {
  print "<p>name=$_</p>\n";
}

my $value = param('name');
print "<p>scalar name=$value</p>\n";

print p("END"), end_html;

